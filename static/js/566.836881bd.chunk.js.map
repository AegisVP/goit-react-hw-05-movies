{"version":3,"file":"static/js/566.836881bd.chunk.js","mappings":"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","sources":["components/Common/MovieList.styled.jsx","components/Common/fetchFilms.js","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n  margin: ${p => p.theme.mp(1, 0, 0)};\n  padding: ${p => p.theme.mp(2)};\n\n  display: flex;\n  flex-direction: column;\n  flex-wrap: no-wrap;\n\n  list-style: none;\n`;\n\nexport const StyledMovieItem = styled.li`\n  margin: ${p => p.theme.mp(2)};\n  padding: 0;\n  word-wrap: none;\n  padding: 0;\n\n  display: flex;\n  justify-content: start;\n  align-items: center;\n`;\n\nexport const StyledMovieLink = styled(Link)`\n  margin: 0;\n  padding: ${p => p.theme.mp(2)};\n\n  width: 100%;\n\n  font-size: 14px;\n  font-weight: normal;\n  text-decoration: none;\n  color: darkblue;\n\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n\n  &.active {\n    text-decoration: underline;\n    color: darkred;\n  }\n`;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst API_KEY = 'ad24807293275bef83ede161311e71e0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst PATH_TRENDING = 'movie/popular'; // - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nconst PATH_SEARCH = 'search/movie'; // - пошук фільму за ключовим словом на сторінці фільмів.\nconst PATH_DETAILS = 'movie'; // - запит повної інформації про фільм для сторінки кінофільму.\nconst PATH_CREDITS = 'credits'; // - запит інформації про акторський склад для сторінки кінофільму.\nconst PATH_REVIEWS = 'reviews'; // - запит оглядів для сторінки кінофільму.\nconst searchParam = new URLSearchParams({ api_key: API_KEY });\n\nexport async function fetchFilmData(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmData = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}?${searchParam}`)\n    .then(r => r.data)\n    .catch(window.alert);\n\n  funcCB(filmData);\n}\n\nexport async function fetchFilmCredits(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmCredits = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?${searchParam}`)\n    .then(r => r.data.cast.slice(0, 10))\n    .catch(window.alert);\n\n  funcCB(filmCredits);\n}\n\nexport async function fetchFilmReviews(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmReviews = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?${searchParam}`)\n    .then(r => r.data.results.slice(0, 10))\n    .catch(window.alert);\n\n  funcCB(filmReviews);\n}\n\nexport const useFilmSearch = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchPage, setSearchPage] = useState('');\n  const [filmList, setFilmList] = useState({ results: [] });\n\n  async function fetchFilmList({ query = 'trending', page = 1 }) {\n    if (query?.length > 0 && query !== 'trending') {\n      searchParam.set('query', query);\n      searchParam.set('page', page);\n    }\n\n    const URL_PATH = query === 'trending' ? PATH_TRENDING : PATH_SEARCH;\n    const path = `${BASE_URL}/${URL_PATH}?${searchParam}`;\n\n    await axios\n      .get(path)\n      .then(r => r.data)\n      .then(setFilmList)\n      .catch(window.alert);\n  }\n\n  useEffect(() => {\n    if (searchQuery) fetchFilmList({ query: searchQuery, page: searchPage });\n    else emptyFilmList();\n  }, [searchQuery, searchPage]);\n\n  const newSearch = ({ query = 'trending', page = 1 } = {}) => {\n    if (searchQuery !== query) {\n      setSearchQuery(query?.trim().toLocaleLowerCase());\n      setSearchPage(page);\n\n      if (!(query?.length >= 0)) emptyFilmList();\n    }\n  };\n\n  const emptyFilmList = () => {\n    setFilmList({});\n  };\n\n  return [filmList, newSearch, emptyFilmList];\n};\n\n// export default fetchFilmData;\n","import styled from 'styled-components';\n\nexport const StyledLabel = styled.label`\n  margin: ${p => p.theme.mp(2)};\n\n  display: flex;\n\n  font-size: 14px;\n  border: 1px solid #000000;\n`;\n\nexport const StyledInput = styled.input`\n  margin: 0;\n  padding: ${p => p.theme.mp(1)};\n\n  width: 250px;\n  border: none;\n  outline: none;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 6px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  width: 36px;\n\n  font-size: 18px;\n  line-height: 18px;\n\n  border: none;\n  outline: none;\n  background-color: transparent;\n`;\n","import { useFilmSearch } from 'components/Common/fetchFilms';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { StyledMovieList, StyledMovieItem, StyledMovieLink } from '../Common/MovieList.styled';\nimport { StyledLabel, StyledInput, StyledButton } from './SearchMovies.styled';\n\nconst SearchMovies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchPage, setSearchPage] = useState('');\n  const [filmList, newSearch] = useFilmSearch();\n  const paramsQuery = searchParams.get('query');\n  const paramsPage = searchParams.get('page');\n\n  useEffect(() => {\n    const newQueryValue = paramsQuery || '';\n    const newPageValue = !paramsPage || paramsPage === '' ? 1 : paramsPage;\n\n    if (newQueryValue !== '') setSearchParams({ query: newQueryValue, page: newPageValue });\n\n    setSearchQuery(newQueryValue);\n    setSearchPage(newPageValue);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [paramsQuery, paramsPage]);\n\n  // useEffect(() => {}, []);\n\n  useEffect(() => {\n    newSearch({ query: searchQuery, page: searchPage });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchQuery, searchPage]);\n\n  const onSubmit = e => {\n    e?.preventDefault();\n\n    if (e.currentTarget.query.value !== '') setSearchParams({ query: e.currentTarget.query.value, page: 1 });\n  };\n\n  return !filmList.results || filmList.results?.length === 0 ? (\n    <div>\n      <form action=\"#\" method=\"get\" onSubmit={onSubmit}>\n        <StyledLabel>\n          <StyledInput type=\"text\" name=\"query\" autoFocus placeholder=\"What movie do you wish to find?\" />\n          <StyledButton type=\"submit\">🔎</StyledButton>\n        </StyledLabel>\n      </form>\n      {filmList.results?.length === 0 && <p>no films found</p>}\n    </div>\n  ) : (\n    <Suspense fallback={<p>Loading...</p>}>\n      <StyledMovieList>\n        {filmList.results.map(film => {\n          return (\n            <StyledMovieItem key={film.id}>\n              <StyledMovieLink to={`${film.id}`} state={{ from: `/movies?query=${searchQuery}` }}>\n                {film?.original_title}\n              </StyledMovieLink>\n            </StyledMovieItem>\n          );\n        })}\n      </StyledMovieList>\n    </Suspense>\n  );\n};\n\nexport default SearchMovies;\n"],"names":["StyledMovieList","styled","p","theme","mp","StyledMovieItem","StyledMovieLink","Link","BASE_URL","PATH_TRENDING","PATH_SEARCH","PATH_DETAILS","PATH_CREDITS","PATH_REVIEWS","searchParam","URLSearchParams","api_key","fetchFilmData","movieId","funcCB","axios","then","r","data","catch","window","alert","filmData","fetchFilmCredits","cast","slice","filmCredits","fetchFilmReviews","results","filmReviews","useFilmSearch","useState","searchQuery","setSearchQuery","searchPage","setSearchPage","filmList","setFilmList","query","page","length","set","URL_PATH","path","useEffect","fetchFilmList","emptyFilmList","trim","toLocaleLowerCase","StyledLabel","StyledInput","StyledButton","useSearchParams","searchParams","setSearchParams","newSearch","paramsQuery","get","paramsPage","newQueryValue","newPageValue","Suspense","fallback","map","film","to","id","state","from","original_title","action","method","onSubmit","e","preventDefault","currentTarget","value","type","name","autoFocus","placeholder"],"sourceRoot":""}