{"version":3,"file":"static/js/736.19777a89.chunk.js","mappings":"8PAEaA,EAAWC,EAAAA,GAAAA,GAAH,0EAMRC,EAAWD,EAAAA,GAAAA,GAAH,yJACR,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAf,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAG,EAAG,EAArB,IAQAC,EAAWL,EAAAA,GAAAA,IAAH,2JASRM,EAAYN,EAAAA,GAAAA,EAAH,kFACV,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAG,EAAG,EAArB,IAKAG,EAAOP,EAAAA,GAAAA,KAAH,gDAIJQ,EAAgBR,EAAAA,GAAAA,EAAH,8DACd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,GAAG,EAAG,EAAG,EAArB,I,SCWb,EA5Ca,WACX,IAAMK,GAASC,EAAAA,EAAAA,MACTC,EAAUC,SAASH,EAAOE,SAChC,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACR,GAAIC,MAAMN,IAA+B,kBAAZA,EAAsB,OAAO,yCAC1DO,EAAAA,EAAAA,IAAiBP,EAASI,EAC3B,GAAE,CAACJ,KAGF,SAACZ,EAAD,UACGe,GAAWA,EAAQK,OAAS,EAC3BL,EAAQM,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAClC,OACE,UAACvB,EAAD,YACE,gBACEwB,IACED,EAAY,4DAC6CA,GAD7C,4JAIdE,MAAM,MACNC,OAAO,MACPC,IAAKN,KAEP,UAACjB,EAAD,YACE,SAACC,EAAD,UAAYgB,IACXC,EAAUJ,OAAS,IAClB,UAACX,EAAD,YACE,SAACD,EAAD,kBADF,IACoBgB,UAfXF,EAqBlB,KAED,SAACpB,EAAD,2CAIP,C,8LC3CK4B,EAAW,+BACXC,EAAgB,gBAChBC,EAAc,eACdC,EAAe,QACfC,EAAe,UACfC,EAAe,UACfC,EAAc,IAAIC,gBAAgB,CAAEC,QAP1B,qCAST,SAAeC,EAAtB,iDAAO,OAAP,0BAAO,WAA6B3B,EAAS4B,GAAtC,+EACA5B,EADA,iEAGkB6B,IAAAA,IAAA,UACbX,EADa,YACDG,EADC,YACerB,EADf,YAC0BwB,IAC9CM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IACNC,MAAMC,OAAOC,OANX,OAGCC,EAHD,OAQLR,EAAOQ,GARF,kEAWA,SAAe7B,EAAtB,iDAAO,OAAP,0BAAO,WAAgCP,EAAS4B,GAAzC,+EACA5B,EADA,iEAGqB6B,IAAAA,IAAA,UAChBX,EADgB,YACJG,EADI,YACYrB,EADZ,YACuBsB,EADvB,YACuCE,IAC9DM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKK,KAAKC,MAAM,EAAG,GAAzB,IACNL,MAAMC,OAAOC,OANX,OAGCI,EAHD,OAQLX,EAAOW,GARF,kEAWA,SAAeC,EAAtB,iDAAO,OAAP,0BAAO,WAAgCxC,EAAS4B,GAAzC,+EACA5B,EADA,iEAGqB6B,IAAAA,IAAA,UAChBX,EADgB,YACJG,EADI,YACYrB,EADZ,YACuBuB,EADvB,YACuCC,IAC9DM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKS,QAAQH,MAAM,EAAG,GAA5B,IACNL,MAAMC,OAAOC,OANX,OAGCO,EAHD,OAQLd,EAAOc,GARF,kEAWA,IAAMC,EAAgB,WAC3B,OAAsCzC,EAAAA,EAAAA,UAAS,IAA/C,eAAO0C,EAAP,KAAoBC,EAApB,KACA,GAAoC3C,EAAAA,EAAAA,UAAS,IAA7C,eAAO4C,EAAP,KAAmBC,EAAnB,KACA,GAAgC7C,EAAAA,EAAAA,UAAS,CAAEuC,QAAS,KAApD,eAAOO,EAAP,KAAiBC,EAAjB,KAHiC,8CAKjC,+GAA+BC,MAAAA,OAA/B,MAAuC,WAAvC,MAAmDC,KAAAA,OAAnD,MAA0D,EAA1D,GACW,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAO1C,QAAS,GAAe,aAAV0C,IACvB1B,EAAY4B,IAAI,QAASF,GACzB1B,EAAY4B,IAAI,OAAQD,IAGpBE,EAAqB,aAAVH,EAAuB/B,EAAgBC,EAClDkC,EAPR,UAOkBpC,EAPlB,YAO8BmC,EAP9B,YAO0C7B,GAP1C,SASQK,IAAAA,IACCyB,GACJxB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IACNF,KAAKmB,GACLhB,MAAMC,OAAOC,OAblB,4CALiC,uBAqBjC9B,EAAAA,EAAAA,YAAU,WACJuC,EAtB2B,oCAsBdW,CAAc,CAAEL,MAAON,EAAaO,KAAML,IACtDU,GACN,GAAE,CAACZ,EAAaE,IAEjB,IASMU,EAAgB,WACpBP,EAAY,CAAER,QAAS,IACxB,EAED,MAAO,CAACO,EAbU,WAA4C,IAAD,yDAAP,CAAC,EAAM,IAAxCE,MAAAA,OAAwC,MAAhC,WAAgC,MAApBC,KAAAA,OAAoB,MAAb,EAAa,EACvDP,IAAgBM,IAClBL,EAAc,OAACK,QAAD,IAACA,OAAD,EAACA,EAAOO,OAAOC,qBAC7BX,EAAcI,IAEH,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAO1C,SAAU,GAAIgD,IAE9B,EAM4BA,EAC9B,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Common/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  padding: ${p => p.theme.mp(2)};\n  margin: ${p => p.theme.mp(3, 0, 0)};\n\n  font-size: 14px;\n  font-weight: normal;\n\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n`;\n\nexport const CastMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: normal;\n  margin: 0;\n`;\n\nexport const ActorName = styled.p`\n  margin: ${p => p.theme.mp(2, 0, 0)};\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const Span = styled.span`\n  font-weight: normal;\n`;\n\nexport const CharacterName = styled.p`\n  margin: ${p => p.theme.mp(2, 0, 0)};\n  font-weight: bold;\n`;\n","import { fetchFilmCredits } from 'components/Common/fetchFilms';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorName, CastItem, CastList, CastMeta, CharacterName, Span } from './Cast.styled';\n\nconst Cast = () => {\n  const params = useParams();\n  const movieId = parseInt(params.movieId);\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    if (isNaN(movieId) || typeof movieId !== 'number') return <p>Not a number</p>;\n    fetchFilmCredits(movieId, setCredits);\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {credits && credits.length > 0 ? (\n        credits.map(({ id, name, character, profile_path }) => {\n          return (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://www.themoviedb.org/t/p/w138_and_h175_face/${profile_path}`\n                    : `https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg`\n                }\n                width=\"138\"\n                height=\"175\"\n                alt={name}\n              />\n              <CastMeta>\n                <ActorName>{name}</ActorName>\n                {character.length > 0 && (\n                  <CharacterName>\n                    <Span>as </Span> {character}\n                  </CharacterName>\n                )}\n              </CastMeta>\n            </CastItem>\n          );\n        })\n      ) : (\n        <CastItem>No information is available</CastItem>\n      )}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst API_KEY = 'ad24807293275bef83ede161311e71e0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst PATH_TRENDING = 'movie/popular'; // - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nconst PATH_SEARCH = 'search/movie'; // - пошук фільму за ключовим словом на сторінці фільмів.\nconst PATH_DETAILS = 'movie'; // - запит повної інформації про фільм для сторінки кінофільму.\nconst PATH_CREDITS = 'credits'; // - запит інформації про акторський склад для сторінки кінофільму.\nconst PATH_REVIEWS = 'reviews'; // - запит оглядів для сторінки кінофільму.\nconst searchParam = new URLSearchParams({ api_key: API_KEY });\n\nexport async function fetchFilmData(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmData = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}?${searchParam}`)\n    .then(r => r.data)\n    .catch(window.alert);\n\n  funcCB(filmData);\n}\n\nexport async function fetchFilmCredits(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmCredits = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?${searchParam}`)\n    .then(r => r.data.cast.slice(0, 10))\n    .catch(window.alert);\n\n  funcCB(filmCredits);\n}\n\nexport async function fetchFilmReviews(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmReviews = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?${searchParam}`)\n    .then(r => r.data.results.slice(0, 10))\n    .catch(window.alert);\n\n  funcCB(filmReviews);\n}\n\nexport const useFilmSearch = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchPage, setSearchPage] = useState('');\n  const [filmList, setFilmList] = useState({ results: [] });\n\n  async function fetchFilmList({ query = 'trending', page = 1 }) {\n    if (query?.length > 0 && query !== 'trending') {\n      searchParam.set('query', query);\n      searchParam.set('page', page);\n    }\n\n    const URL_PATH = query === 'trending' ? PATH_TRENDING : PATH_SEARCH;\n    const path = `${BASE_URL}/${URL_PATH}?${searchParam}`;\n\n    await axios\n      .get(path)\n      .then(r => r.data)\n      .then(setFilmList)\n      .catch(window.alert);\n  }\n\n  useEffect(() => {\n    if (searchQuery) fetchFilmList({ query: searchQuery, page: searchPage });\n    else emptyFilmList();\n  }, [searchQuery, searchPage]);\n\n  const newSearch = ({ query = 'trending', page = 1 } = {}) => {\n    if (searchQuery !== query) {\n      setSearchQuery(query?.trim().toLocaleLowerCase());\n      setSearchPage(page);\n\n      if (!(query?.length >= 0)) emptyFilmList();\n    }\n  };\n\n  const emptyFilmList = () => {\n    setFilmList({ results: [] });\n  };\n\n  return [filmList, newSearch, emptyFilmList];\n};\n\n// export default fetchFilmData;\n"],"names":["CastList","styled","CastItem","p","theme","mp","CastMeta","ActorName","Span","CharacterName","params","useParams","movieId","parseInt","useState","credits","setCredits","useEffect","isNaN","fetchFilmCredits","length","map","id","name","character","profile_path","src","width","height","alt","BASE_URL","PATH_TRENDING","PATH_SEARCH","PATH_DETAILS","PATH_CREDITS","PATH_REVIEWS","searchParam","URLSearchParams","api_key","fetchFilmData","funcCB","axios","then","r","data","catch","window","alert","filmData","cast","slice","filmCredits","fetchFilmReviews","results","filmReviews","useFilmSearch","searchQuery","setSearchQuery","searchPage","setSearchPage","filmList","setFilmList","query","page","set","URL_PATH","path","fetchFilmList","emptyFilmList","trim","toLocaleLowerCase"],"sourceRoot":""}