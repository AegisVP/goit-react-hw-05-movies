{"version":3,"file":"static/js/736.42dda676.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Common/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  padding: ${p => p.theme.mp(2)};\n  margin: ${p => p.theme.mp(3, 0, 0)};\n\n  font-size: 14px;\n  font-weight: normal;\n\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n`;\n\nexport const CastMeta = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: normal;\n  margin: 0;\n`;\n\nexport const ActorName = styled.p`\n  margin: ${p => p.theme.mp(2, 0, 0)};\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const Span = styled.span`\n  font-weight: normal;\n`;\n\nexport const CharacterName = styled.p`\n  margin: ${p => p.theme.mp(2, 0, 0)};\n  font-weight: bold;\n`;\n","import { fetchFilmCredits } from 'components/Common/fetchFilms';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorName, CastItem, CastList, CastMeta, CharacterName, Span } from './Cast.styled';\n\nconst Cast = () => {\n  const params = useParams();\n  const movieId = parseInt(params.movieId);\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    if (isNaN(movieId) || typeof movieId !== 'number') return <p>Not a number</p>;\n    fetchFilmCredits(movieId, setCredits);\n  }, [movieId]);\n\n  console.log('credits', credits);\n\n  return (\n    <CastList>\n      {credits && credits.length > 0 ? (\n        credits.map(({ id, name, character, profile_path }) => {\n          return (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://www.themoviedb.org/t/p/w138_and_h175_face/${profile_path}`\n                    : `https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg`\n                }\n                width=\"138\"\n                height=\"175\"\n                alt={name}\n              />\n              <CastMeta>\n                <ActorName>{name}</ActorName>\n                {character.length > 0 && (\n                  <CharacterName>\n                    <Span>as </Span> {character}\n                  </CharacterName>\n                )}\n              </CastMeta>\n            </CastItem>\n          );\n        })\n      ) : (\n        <CastItem>No information is available</CastItem>\n      )}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst API_KEY = 'ad24807293275bef83ede161311e71e0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst PATH_TRENDING = 'movie/popular'; // - список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nconst PATH_SEARCH = 'search/movie'; // - пошук фільму за ключовим словом на сторінці фільмів.\nconst PATH_DETAILS = 'movie'; // - запит повної інформації про фільм для сторінки кінофільму.\nconst PATH_CREDITS = 'credits'; // - запит інформації про акторський склад для сторінки кінофільму.\nconst PATH_REVIEWS = 'reviews'; // - запит оглядів для сторінки кінофільму.\nconst searchParam = new URLSearchParams({ api_key: API_KEY });\n\nexport async function fetchFilmData(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmData = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}?${searchParam}`)\n    .then(r => r.data)\n    .catch(window.alert);\n\n  funcCB(filmData);\n}\n\nexport async function fetchFilmCredits(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmCredits = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?${searchParam}`)\n    .then(r => r.data.cast.slice(0, 10))\n    .catch(window.alert);\n\n  funcCB(filmCredits);\n}\n\nexport async function fetchFilmReviews(movieId, funcCB) {\n  if (!movieId) return;\n\n  const filmReviews = await axios\n    .get(`${BASE_URL}/${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?${searchParam}`)\n    .then(r => r.data.results.slice(0, 10))\n    .catch(window.alert);\n\n  funcCB(filmReviews);\n}\n\nexport const useFilmSearch = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filmList, setFilmList] = useState({ results: [] });\n\n  async function fetchFilmSearch(query = 'trending') {\n    const searchParam = new URLSearchParams({ api_key: API_KEY, adult: true });\n    if (query?.length > 0 && query !== 'trending') searchParam.append('query', query);\n\n    const URL_PATH = query === 'trending' ? PATH_TRENDING : PATH_SEARCH;\n    const path = `${BASE_URL}/${URL_PATH}?${searchParam}`;\n\n    await axios\n      .get(path)\n      .then(r => r.data)\n      .then(setFilmList)\n      .catch(window.alert);\n  }\n\n  // useEffect(() => {\n\n  // },[])\n\n  useEffect(() => {\n    if (searchQuery) fetchFilmSearch(searchQuery);\n    // else setFilmList([]);\n  }, [searchQuery]);\n\n  const newSearch = ({ query = 'trending' } = {}) => {\n    console.log(`saved search: \"${searchQuery}`);\n    console.log(`new search: \"${query}\" (${query?.length})`);\n    \n    if (searchQuery !== query && query?.length >= 0) {\n      // console.log('setting searchQuery to', query);\n      setSearchQuery(String(query).toLocaleLowerCase().trim());\n    }\n  };\n\n  return [filmList, newSearch];\n};\n\n// export default fetchFilmData;\n"],"names":["CastList","styled","CastItem","p","theme","mp","CastMeta","ActorName","Span","CharacterName","params","useParams","movieId","parseInt","useState","credits","setCredits","useEffect","isNaN","fetchFilmCredits","console","log","length","map","id","name","character","profile_path","src","width","height","alt","API_KEY","BASE_URL","PATH_TRENDING","PATH_SEARCH","PATH_DETAILS","PATH_CREDITS","PATH_REVIEWS","searchParam","URLSearchParams","api_key","fetchFilmData","funcCB","axios","then","r","data","catch","window","alert","filmData","cast","slice","filmCredits","fetchFilmReviews","results","filmReviews","useFilmSearch","searchQuery","setSearchQuery","filmList","setFilmList","query","adult","append","URL_PATH","path","fetchFilmSearch","String","toLocaleLowerCase","trim"],"sourceRoot":""}